% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simphony.R
\name{simphony}
\alias{simphony}
\title{Simulate gene expression data}
\usage{
simphony(exprGroupsList, fracGenes = NULL, nGenes = 10, period = 24,
  timepointsType = "auto", interval = 2, nReps = 1,
  timepoints = NULL, nSamplesPerCond = NULL, rhyFunc = sin,
  dispFunc = getDispFunc(), family = "gaussian")
}
\arguments{
\item{exprGroupsList}{\code{data.frame} or \code{data.table} (for a single condition)
or list of \code{data.frame}s or \code{data.table}s (for multiple conditions), where
each row corresponds to a group of genes to simulate. The following
columns are all optional:
\describe{
\item{fracGenes}{Fraction of simulated genes to allocate to each group.
Defaults to 1/(number of groups).}
\item{base}{Average expression. Defaults to 0 if \code{family} == 'gaussian'
and to 7 (mean log2 counts) if \code{family} == 'negbinom'.}
\item{sd}{Standard deviation of sampled expression values. Defaults to 1.
Only used if \code{family} == 'gaussian'.}
\item{dispFunc}{Function to calculate dispersion of sampled expression
values, given expected expression in counts. Only used if \code{family} ==
'negbinom'.}
\item{amp}{Amplitude of rhythmic expression. Defaults to 0 (i.e.,
non-rhythmic.}
\item{phase}{Phase of rhythmic expression, in the same units as \code{period}.
Defaults to 0.}
\item{rhyFunc}{Function to generate rhythmic expression. Must have a
period of 2*pi. Defaults to \code{sin}.}
}}

\item{fracGenes}{Fraction of simulated genes to allocate to each group.
Defaults to 1/(number of groups). Only used if the first \code{exprGroupsList}
\code{data.frame} lacks a \code{fracGenes} column.}

\item{nGenes}{Integer for the total number of genes to simulate.}

\item{period}{Integer for the period of simulated rhythms.}

\item{timepointsType}{Character string for how to set the timepoints
for the simulation. Must be 'auto' (default), 'specified', or 'random'.}

\item{interval}{Integer for the amount of time between consecutive
timepoints, in the same units as \code{period}. The first timepoint is 0. Only
used if \code{timepointsType} == 'auto'.}

\item{nReps}{Integer for the number of replicates per timepoint. Only used
if \code{timepointsType} == 'auto'.}

\item{timepoints}{Numeric vector of exact timepoints to simulate, including
any replicates. Only used if \code{timepointsType} == 'specified'.}

\item{nSamplesPerCond}{Integer for the number of samples per condition,
which will be randomly uniformly spaced between 0 and \code{period} and different
for each condition. Only used if timepointsType == 'random'.}

\item{rhyFunc}{Function to generate rhythmic expression. Must have a period
of 2*pi. Defaults to \code{sin}. Only used if a \code{data.frame} in \code{exprGroupsList}
lacks a \code{rhyFunc} column.}

\item{dispFunc}{Function to calculate dispersion of sampled expression
values, given expected expression in counts. Defaults to \code{defaultDispFunc}.
Only used if \code{family} == 'negbinom' and a \code{data.frame} in \code{exprGroupsList}
lacks a \code{dispFunc} column.}

\item{family}{Character string for the family of distributions from
which to generate the expression values. Must be 'gaussian' or 'negbinom'.}
}
\value{
List with the following elements:
\describe{
\item{exprData}{Matrix of expression values (counts, if \code{family} ==
'negbinom'), with genes as rownames and samples as colnames.}
\item{sampleMetadata}{\code{data.table} with one row per sample.}
\item{geneMetadata}{\code{data.table} with one row per gene per condition.}
}
}
\description{
Simulate experiments in which rhythmic and non-rhythmic gene expression is
measured at multiple timepoints in one or more conditions.
}
\examples{
library('data.table')

# Simulate data for genes having one of three sets of rhythmic parameters.
exprGroups = data.table(amp = c(0, 1, 1), phase = c(0, 0, 6),
                        rhyFunc = c(cos, cos, sin))
simData = simphony(exprGroups)

# Simulate data for an experiment with specified timepoints and replicates.
exprGroups = data.table(amp = c(0, 1))
simData = simphony(exprGroups, timepointsType = 'specified',
                   timepoints = rep(seq(0, 6, 2), each = 2))

# Simulate data for genes whose rhythmicity varies between two conditions.
exprGroupsList = list(data.table(amp = c(1, 2), phase = c(0, -3)),
                      data.table(amp = c(3, 2), phase = c(0, 3)))
simData = simphony(exprGroupsList)

# Simulate data for 100 genes, half non-rhythmic and half rhythmic, with
# amplitudes for rhythmic genes sampled from a log-normal distribution whose
# parameters were estimated using limma and circadian microarray data from
# mouse lung (GSE54650).
nGenes = 100
rhyFrac = 0.5
nRhyGenes = round(rhyFrac * nGenes)
rhyAmps = 2^rnorm(nRhyGenes, sd = 0.415, mean = 1.32)
fracGenes = c(1 - rhyFrac, rep(rhyFrac / nRhyGenes, nRhyGenes))
exprGroups = data.table(amp = c(0, rhyAmps), fracGenes = fracGenes)
simData = simphony(exprGroups, nGenes = nGenes)

# Simulate data for 100 rhythmic genes, with baseline log2 expected counts and
# residual log dispersion sampled from distributions whose parameters were
# estimated using DESeq2 and circadian RNA-seq data from mouse lung (GSE54651).
nGenes = 100
baseLogCounts = rnorm(nGenes, mean = 8.63, sd = 2.63)
dispFactors = exp(rnorm(nGenes, sd = 1.02))
dispFuncs = sapply(dispFactors, function(z) getDispFunc(x2 = z))
exprGroups = data.table(base = baseLogCounts, dispFunc = dispFuncs, amp = 1)
simData = simphony(exprGroups, nGenes = nGenes, family = 'negbinom')
}
\seealso{
\code{\link{getDispFunc}}
}
